OmegaOS
===========

Getting Started
---------------

To get started with Android/OmegaOS, you'll need to get
familiar with [Git and Repo](http://source.android.com/source/using-repo.html).

### Build Environment

- Tested and Working on any version of Ubuntu - 14.04,14.10,15.04 (64-bit)
- Any other distribution based of the Ubuntu Distro such as Lubuntu, Xubuntu and etc.
- Any form of Terminal
- Decent hardware (minimum of at least a dual core CPU and 8 GB of RAM)
- A storage unit of any kind (We recommend utilizing SSDs as Mechanical HDDs slow down the build proccess drastically and the minimum storage size is 70GB. Having more will be useful with CCache[More on that later]
- Required Packages should have been installed

### Required Packages
##### Simply copy and paste this in a terminal window:
[Hint: This command updates the Ubuntu Packages List (Install Listing) and install the required version of Java]

     $ sudo apt-get install openjdk-8-jdk

### Let that install and then proceed.

### More copy and paste:
[Hint: Running this command installs the other required packages to build android]

     $ sudo apt-get update && sudo apt-get install git-core gnupg flex bison gperf libsdl1.2-dev libesd0-dev libwxgtk3.0-dev squashfs-tools build-essential zip curl libncurses5-dev zlib1g-dev openjdk-8-jre openjdk-8-jdk pngcrush schedtool libxml2 libxml2-utils xsltproc lzop libc6-dev schedtool g++-multilib lib32z1-dev lib32ncurses5-dev repo gcc-multilib maven tmux screen w3m ncftp

### Getting the source
- Making required directories
- Obtaining the repo binary
- Adding repo binary to your path
- Giving the repo binary proper permissions
- Initializing an empty repo
- Syncing the repo

Alright, so now weâ€™re getting there. I have outlined the basics of what we are about to do and broke them down as I know them. This is all pretty much going to be copy/paste so it will be fairly difficult to screw this up :)

##### Make directory for the repo binary

      $ mkdir ~/bin

##### Add directory for the repo binary to its path

      $ PATH=~/bin:$PATH

##### Downloading repo binary and placing it in the proper directory

      $ curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > ~/bin/repo

##### Giving the repo binary the proper permissions

      $ chmod a+x ~/bin/repo

##### Creating directory for where the OmegaOS repo will be stored and synced

      $ mkdir ~/Omega
      $ cd ~/Omega

##### Initializing the OmegaOS repo and downloading the manifest
To initialize your local repository using the OmegaOS trees, use a command like this:

    repo init -u git://github.com/OmegaOS/platform_manifest.git -b n7.1

##### Syncing the source
[Hint: This might take a long time as the source is ~30GB]

      $  repo sync --no-clone-bundle --no-tags -c -f -j8

### Building the OmegaOS
- Preparing Required Binaries and Device Drivers
- Setting Up CCache (Optional)
- Building OmegaOS

Congratulations on the succesfull build initialization! Now, we shall go ahead and prepare to build for your device!

##### Preparing OmegaOS for devices
- Follow the AOSP Porting Instructions stated here to prepare the proprietary files for building for your device: (http://xda-university.com/as-a-developer/porting-aosp-roms-using-source-code)

##### Setting Up CCache
- CCache is a method of utilizing a specified storage space to speed up building. It can be referred to as the same caching your android device does to speed up application and system boot times. In this case, CCache will help build OmegaOS faster than standard build times (Able to cut-down 50% of time taken to build).
- To set up CCache, follow the following:


        $ echo "export USE_CCACHE=1" >> ~/.bashrc

        $ ~/Omega/prebuilts/misc/linux-x86/ccache/ccache -M 50G

     -M 50G
The number before the letter G at the end specifies the amount of space CCache can use in your storage unit. As such, ensure that not too much of space is specified as this might result in unexpected errors although, the more storage you have, its recommended to have more CCache as it will increase the build times. Most efficient build systems are able to utilize CCache to about 120G or more.

##### To build OmegaOS for your device

      $ cd ~/Omega
      $ . build/envsetup.sh && brunch <device>

##### Obtaining the zip created from the build process
To get the zip file that has been built, navigate to the following directory and find for the zip file:

      $ cd ~/Omega/out/target/product/<devicename>/

If you found it, then congratulations you have successfully compiled OmegaOS! If you didn't, try retrying the build process but before doing so, ensure you do the following to make $

      $ cd ~/Omega
      $ make clean
      $ repo sync --force-sync

After doing so, redo everything stated from the Building Section.

##### For those who successfully built OmegaOS

Well, Congratulations on your victory! Now you have a .zip file that is flashable to your device! Share it to the internet as you wish, but be sure to contribute back and also give credits to the OmegaOS and its contributors! Also keep in mind that if an official build exists for a device that no unofficial builds should be released publicly. Do come and build OmegaOS another time as source code is routinely being improved upon. If you wish to contribute, feel free to make a pull request to the OmegaOS Team! See you again builder! Note: If you decide to create a thread on xda, please limit the thread to only one per device. More than one thread will not be allowed per device as it creates confusion amongst users and makes it hard for us to track bug reports. If you have unofficial builds, post them up on g+ so users can use and report issues in the post itself.
